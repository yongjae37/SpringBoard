<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="board">
	
	<!-- 게시글 전체 목록 조회 -->
	<select id="listAll" resultType="com.spring_tutorial.board.model.dto.BoardDto">
		SELECT * FROM (	
			SELECT ROWNUM AS rn, A.* FROM (
				SELECT
					rownum,
					board_id AS boardId,
					title,
					content,
					writer,
					regdate AS regDate,
					views
				FROM
					board
				<include refid="search"></include>
				ORDER BY
					board_id desc,
					regdate desc
			) A
		) WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 게시글 레코드 개수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*)
		FROM board
		<include refid="search"></include>
	</select>
	
	<!-- sql code 조각 : 반복되는 sql의 일부를 sql 태그를 이용하여 분리-->
	<sql id="search">
		<choose>
			<!-- 검색 옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE writer like '%'||#{keyword}||'%'
				OR content like '%'||#{keyword}||'%'
				OR title like '%'||#{keyword}||'%'
			</when>
			
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<!-- 게시글 작성 -->
	<insert id="create">
		INSERT INTO board (
			board_id,
			title,
			content,
			writer
		)
		VALUES (
			(SELECT NVL(MAX(board_id) + 1, 1) FROM board),
			#{title},
			#{content},
			#{writer}
		)
	</insert>
	
	<!-- 게시글 상세 페이지 -->
	<select id="detail" resultType="com.spring_tutorial.board.model.dto.BoardDto" >
		SELECT 
			board_id AS boardId,
			title,
			content,
			writer,
			regdate AS regDate,
			views
		FROM board
		WHERE board_id = #{boardId}
	</select>
	
	<!-- 게시글 수정 -->
	<update id="update">
		UPDATE board
		SET
			title = #{title},
			content = #{content},
			writer = #{writer}
		WHERE
			board_id = #{boardId}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete">
		DELETE FROM board
		WHERE board_id = #{boardId}
	</delete>
	
	<!-- 사용자가 게시글을 조회했는지 검사 -->
	<select id="checkViews" resultType="String">
		SELECT user_id
		FROM board_views
		WHERE board_id = #{boardId} AND user_id = #{userId}
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateViews">
		UPDATE board
		SET views = views + 1
		WHERE board_id = #{boardId}
	</update>
	
	<!-- 게시글 조회 테이블에 사용자 추가 -->
	<insert id="addUserToBoardViews">
		INSERT INTO board_views(board_id, user_id)
		VALUES(#{boardId}, #{userId})
	</insert>

</mapper>